<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>bone_animation</name>
 <type>world_tangent_transform</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>bone_index</name>
     <source></source>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>bone_weight</name>
     <source></source>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>position</name>
     <source></source>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>normal</name>
     <source></source>
     <type>vec3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>tangent</name>
     <source></source>
     <type>vec3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_matrix</name>
     <source></source>
     <type>mat4x3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>bones</name>
     <source></source>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>bone_count</size>
     <scale>3</scale>
    </parameter>
    <parameter>
     <name>world_position</name>
     <source></source>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_normal</name>
     <source></source>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_tangent</name>
     <source></source>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>{
	vec4 weight, index, tmp;
	vec3 tmp_position, tmp_normal, tmp_tangent;
	int i, idx;

	tmp = vec4(position.xyz, 1.0);
	index = bone_index;
	weight = bone_weight;

	tmp_position = vec3(0.0);
	tmp_normal = vec3(0.0);
	tmp_tangent = vec3(0.0);

	for (i = 0; i &lt; 4; i++)
	{
		idx = int(index.x);
		tmp_position.x += dot(bones[idx * 3 + 0], tmp) * weight.x;
		tmp_position.y += dot(bones[idx * 3 + 1], tmp) * weight.x;
		tmp_position.z += dot(bones[idx * 3 + 2], tmp) * weight.x;
		tmp_normal.x += dot(bones[idx * 3 + 0].xyz, normal) * weight.x;
		tmp_normal.y += dot(bones[idx * 3 + 1].xyz, normal) * weight.x;
		tmp_normal.z += dot(bones[idx * 3 + 2].xyz, normal) * weight.x;
		tmp_tangent.x += dot(bones[idx * 3 + 0].xyz, tangent) * weight.x;
		tmp_tangent.y += dot(bones[idx * 3 + 1].xyz, tangent) * weight.x;
		tmp_tangent.z += dot(bones[idx * 3 + 2].xyz, tangent) * weight.x;

		if (weight.y &lt;= 0.0)
		{
			break;
		}

		index.xyz = index.yzw;
		weight.xyz = weight.yzw;
	}

	world_position = world_matrix * vec4(tmp_position, 1.0);
	world_normal = normalize(mat3(world_matrix) * normalize(tmp_normal));
	world_tangent = normalize(mat3(world_matrix) * normalize(tmp_tangent));
}
</source>
   <glsl_120>true</glsl_120>
   <glsl_130>true</glsl_130>
   <glsl_140>true</glsl_140>
   <glsl_150>true</glsl_150>
   <glsl_330>true</glsl_330>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
