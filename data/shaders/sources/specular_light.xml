<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>specular</name>
 <type>fragment_light</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>world_position</name>
     <type>vec3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>fragment_normal</name>
     <type>vec3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>light_position</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>light_color</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>diffuse_color</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>specular_color</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_view_direction</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>vec3 dir, reflect_dir;
float dist, scale, nxdir, diffuse, specular, hxdir;

dir = light_position.xyz - world_position * light_color.a;
dist = dot(dir, dir);
dir *= inversesqrt(dist);
nxdir = max(0.0, dot(fragment_normal, dir));
scale = max(0.0, 1.0 - dist * light_position.w);
diffuse = scale * nxdir;

diffuse_color = vec3(0.0);
specular_color = vec3(0.0);

if (diffuse &gt; 0.0)
{
	reflect_dir = reflect(-dir, fragment_normal);
	hxdir = max(0.0, dot(-world_view_direction.xyz, reflect_dir));
	specular = pow(hxdir, 5) * scale;
	diffuse_color += light_color.rgb * diffuse;
	specular_color += light_color.rgb * specular;
}
</source>
   <glsl_120>true</glsl_120>
   <glsl_130>true</glsl_130>
   <glsl_140>true</glsl_140>
   <glsl_150>true</glsl_150>
   <glsl_330>true</glsl_330>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
