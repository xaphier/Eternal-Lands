<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>cdlod-terrain</name>
 <type>world_depth_transformation</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>position</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <auto_parameter>terrain_instances</auto_parameter>
    </parameter>
    <parameter>
     <auto_parameter>terrain_lod_offset</auto_parameter>
    </parameter>
    <parameter>
     <name>terrain_texture_coodrinate</name>
     <type>vec2</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <sampler_parameter>vertex_vector_field_sampler</sampler_parameter>
     <type>sampler2DRect</type>
    </parameter>
    <parameter>
     <common_parameter>world_position</common_parameter>
     <qualifier>out</qualifier>
    </parameter>
    <parameter>
     <auto_parameter>world_transformation</auto_parameter>
    </parameter>
   </parameters>
   <source>mat2x4 terrain_instance;
vec3 vertex_position;
vec2 morph_dir;
float morph, dist;

terrain_instance = terrain_instances[gl_InstanceID];

morph_dir = fract(position.xy * 0.5) * terrain_instance[0].w;
vertex_position = vec3(terrain_instance[0].xy + position.xy * terrain_instance[0].z, 0.0);
dist = length(vertex_position * world_transformation[1].w + terrain_lod_offset.xyz);
morph = clamp(dist * terrain_instance[1].x + terrain_instance[1].y, 0.0, 1.0);
vertex_position.xy += morph_dir * morph;
world_position = texture(vertex_vector_field_sampler, vertex_position.xy).rgb;
world_position.xy = world_position.xy * 2.0 - 1.0;
world_position = world_position * terrain_vector_scale + vertex_position;

world_position += 2.0 * cross(world_transformation[0].xyz, cross(world_transformation[0].xyz, world_position) + world_transformation[0].w * world_position);
world_position *= world_transformation[1].w;
world_position += world_transformation[1].xyz;
terrain_texture_coodrinate = vertex_position.xy;
</source>
   <version>150</version>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
