<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>leaves</name>
 <type>world_normal_transformation</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <vertex_semantic>normal</vertex_semantic>
    </parameter>
    <parameter>
     <vertex_semantic>position</vertex_semantic>
    </parameter>
    <parameter>
     <auto_parameter>time</auto_parameter>
    </parameter>
    <parameter>
     <common_parameter>world_normal</common_parameter>
     <qualifier>out</qualifier>
    </parameter>
    <parameter>
     <common_parameter>world_position</common_parameter>
     <qualifier>out</qualifier>
    </parameter>
    <parameter>
     <auto_parameter>world_transformation</auto_parameter>
    </parameter>
   </parameters>
   <source>world_position = position.xyz * mat3(world_transformation);
world_normal = normalize(world_position - vec3(0.0, 0.0, 3.0));

vec3 new_position;
vec2 wind;
float bend_scale, bend_factor, len;

wind = vec2(0.25, 0.25) * sin(time);
bend_scale = 0.05;

len = length(world_position);

bend_factor = world_position.z * bend_scale;
bend_factor += 1.0;
bend_factor *= bend_factor;
bend_factor = bend_factor * bend_factor - bend_factor;

new_position = world_position;
new_position.xy += wind.xy * bend_factor;
world_position = normalize(new_position) * len;

world_position += vec3(world_transformation[0].w, world_transformation[1].w, world_transformation[2].w);
</source>
   <version>120</version>
   <shader_types>vertex</shader_types>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
