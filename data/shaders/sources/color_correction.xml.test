<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE boost_serialization>
<boost_serialization signature="serialization::archive" version="9">
<shader_source class_id="0" tracking_level="0" version="1">
	<px class_id="1" tracking_level="1" version="0" object_id="_0">
		<types class_id="2" tracking_level="0" version="0">
			<count>1</count>
			<item_version>0</item_version>
			<item>0</item>
		</types>
		<name class_id="3" tracking_level="0" version="0">
			<str>default</str>
		</name>
		<datas class_id="4" tracking_level="0" version="0">
			<count>2</count>
			<item_version>0</item_version>
			<item class_id="5" tracking_level="0" version="0">
				<parameters class_id="6" tracking_level="0" version="0">
					<count>2</count>
					<item_version>0</item_version>
					<item class_id="7" tracking_level="0" version="0">
						<source>
							<str>default_world_depth_transformation</str>
						</source>
						<name>
							<str>color_correction_sampler</str>
						</name>
						<type>28</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>default_world_depth_transformation</str>
						</source>
						<name>
							<str>fragment_color</str>
						</name>
						<type>14</type>
						<qualifier>2</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
				</parameters>
				<version>1</version>
				<source>
					<str>fragment_color = textureLod(color_correction_sampler, fragment_color * color_correction_scale_offset.x + color_correction_scale_offset.y, 0.0).rgb;</str>
				</source>
			</item>
			<item>
				<parameters>
					<count>2</count>
					<item_version>0</item_version>
					<item>
						<source>
							<str>default_world_depth_transformation</str>
						</source>
						<name>
							<str>color_correction_sampler</str>
						</name>
						<type>28</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>default_world_depth_transformation</str>
						</source>
						<name>
							<str>fragment_color</str>
						</name>
						<type>14</type>
						<qualifier>2</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
				</parameters>
				<version>0</version>
				<source>
					<str>fragment_color = texture3D(color_correction_sampler, fragment_color * color_correction_scale_offset.x + color_correction_scale_offset.y).rgb;</str>
				</source>
			</item>
		</datas>
	</px>
</shader_source>
</boost_serialization>

