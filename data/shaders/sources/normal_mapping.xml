<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>normal_mapping</name>
 <type>normal_mapping</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>world_uv</name>
     <type>vec2</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>normal_sampler_0</name>
     <type>sampler2D</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>fragment_normal</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>fragment_uv</name>
     <type>vec2</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>tbn_matrix</name>
     <type>mat3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>{
	vec3 normal;

	normal.xy = texture2D(normal_sampler_0, world_uv).ga * 2.0 - 1.0;
	normal.z = 1.0 - sqrt(dot(normal.xy, normal.xy));

	fragment_normal = tbn_matrix * normal;
	fragment_uv = world_uv;
}
</source>
   <glsl_120>true</glsl_120>
   <glsl_130>false</glsl_130>
   <glsl_140>false</glsl_140>
   <glsl_150>false</glsl_150>
   <glsl_330>false</glsl_330>
  </shader_source_data>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>tbn_matrix</name>
     <type>mat3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_uv</name>
     <type>vec2</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>normal_sampler_0</name>
     <type>sampler2D</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>fragment_normal</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>fragment_uv</name>
     <type>vec2</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>{
	vec3 normal;

	normal.xy = -(texture(normal_sampler_0, world_uv).rg * 2.0 - 1.0);
	normal.z = 1.0 - sqrt(dot(normal.xy, normal.xy));

	fragment_normal = tbn_matrix * normal;
	fragment_uv = world_uv;
}
</source>
   <glsl_120>false</glsl_120>
   <glsl_130>true</glsl_130>
   <glsl_140>true</glsl_140>
   <glsl_150>true</glsl_150>
   <glsl_330>true</glsl_330>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
