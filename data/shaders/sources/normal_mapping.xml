<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>normal_mapping</name>
 <type>normal_mapping</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>fragment_normal</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>fragment_uv</name>
     <type>vec2</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>normal_sampler</name>
     <type>sampler2D</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>tbn_matrix</name>
     <type>mat3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_uv</name>
     <type>vec2</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>vec3 normal;

normal.xy = texture(normal_sampler, world_uv).rg * 2.0 - 1.0;
normal.z = 1.0 - sqrt(dot(normal.xy, normal.xy));

fragment_normal = tbn_matrix * normal;
fragment_uv = world_uv;
</source>
   <version>130</version>
  </shader_source_data>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>fragment_normal</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>fragment_uv</name>
     <type>vec2</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>normal_sampler</name>
     <type>sampler2D</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>tbn_matrix</name>
     <type>mat3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_uv</name>
     <type>vec2</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>vec3 normal;

normal.xy = texture2D(normal_sampler, world_uv).ga * 2.0 - 1.0;
normal.z = 1.0 - sqrt(dot(normal.xy, normal.xy));

fragment_normal = tbn_matrix * normal;
fragment_uv = world_uv;
</source>
   <version>120</version>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
