<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE boost_serialization>
<boost_serialization signature="serialization::archive" version="9">
<shader_source class_id="0" tracking_level="0" version="1">
	<px class_id="1" tracking_level="1" version="0" object_id="_0">
		<types class_id="2" tracking_level="0" version="0">
			<count>1</count>
			<item_version>0</item_version>
			<item>14</item>
		</types>
		<name class_id="3" tracking_level="0" version="0">
			<str>lava</str>
		</name>
		<datas class_id="4" tracking_level="0" version="0">
			<count>2</count>
			<item_version>0</item_version>
			<item class_id="5" tracking_level="0" version="0">
				<parameters class_id="6" tracking_level="0" version="0">
					<count>4</count>
					<item_version>0</item_version>
					<item class_id="7" tracking_level="0" version="0">
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>albedo</str>
						</name>
						<type>15</type>
						<qualifier>1</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>albedo_sampler_0</str>
						</name>
						<type>26</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>albedo_sampler_1</str>
						</name>
						<type>26</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>uv</str>
						</name>
						<type>13</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>3</scale>
					</item>
				</parameters>
				<version>1</version>
				<source>
					<str>{
	vec4 noise;
	vec3 color;
	vec2 tmp_uv[2];
	float p;

	noise = texture(albedo_sampler_1, uv[0]);

	tmp_uv[0] = 2.0 * (uv[1] + noise.xy * 2.0);
	tmp_uv[1] = 2.0 * (uv[2] + noise.yz * 0.2);

	p = texture(albedo_sampler_1, tmp_uv[0]).a;
	color = texture(albedo_sampler_0, tmp_uv[1]).rgb;
	color = color * p * 2.0 + color * color - 0.1;

	color.bg += clamp(color.r - 2.0, 0.0, 1.0);
	color.rb += clamp(color.g - 1.0, 0.0, 1.0);
	color.rg += clamp(color.b - 1.0, 0.0, 1.0);

	albedo = vec4(color, 1.0);
}
</str>
				</source>
			</item>
			<item>
				<parameters>
					<count>4</count>
					<item_version>0</item_version>
					<item>
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>albedo</str>
						</name>
						<type>15</type>
						<qualifier>1</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>albedo_sampler_0</str>
						</name>
						<type>26</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>albedo_sampler_1</str>
						</name>
						<type>26</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>1</scale>
					</item>
					<item>
						<source>
							<str>lava_albedo_mapping</str>
						</source>
						<name>
							<str>uv</str>
						</name>
						<type>13</type>
						<qualifier>0</qualifier>
						<size>0</size>
						<scale>3</scale>
					</item>
				</parameters>
				<version>0</version>
				<source>
					<str>{
	vec4 noise;
	vec3 color;
	vec2 tmp_uv[2];
	float p;

	noise = texture2D(albedo_sampler_1, uv[0]);

	tmp_uv[0] = 2.0 * (uv[1] + noise.xy * 2.0);
	tmp_uv[1] = 2.0 * (uv[2] + noise.yz * 0.2);

	p = texture2D(albedo_sampler_1, tmp_uv[0]).a;
	color = texture2D(albedo_sampler_0, tmp_uv[1]).rgb;
	color = color * p * 2.0 + color * color - 0.1;

	color.bg += clamp(color.r - 2.0, 0.0, 1.0);
	color.rb += clamp(color.g - 1.0, 0.0, 1.0);
	color.rg += clamp(color.b - 1.0, 0.0, 1.0);

	albedo = vec4(color, 1.0);
}
</str>
				</source>
			</item>
		</datas>
	</px>
</shader_source>
</boost_serialization>

