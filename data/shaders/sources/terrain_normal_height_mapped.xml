<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>height map</name>
 <type>world_normal_transformation</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>height_sampler</name>
     <type>sampler2D</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>position</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>texture_scale_offset</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_matrix</name>
     <type>mat4x3</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_normal</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_position</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>world_position.xy = position.xy;
world_position.z = textureLod(height_sampler, position.xy * texture_scale_offset.xy + texture_scale_offset.zw, 0.0).r;
world_position = world_matrix * vec4(world_position, 1.0);
world_normal = normalize(mat3(world_matrix) * vec3(0.0, 0.0, 1.0));
</source>
   <version>130</version>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
