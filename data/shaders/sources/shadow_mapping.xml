<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>default</name>
 <type>shadow_mapping</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <common_parameter>shadow</common_parameter>
     <qualifier>out</qualifier>
    </parameter>
    <parameter>
     <sampler_parameter>shadow_sampler</sampler_parameter>
     <type>sampler2DShadow</type>
    </parameter>
    <parameter>
     <common_parameter>shadow_uvs</common_parameter>
     <qualifier>in</qualifier>
    </parameter>
   </parameters>
   <source>shadow = textureProjLod(shadow_sampler, shadow_uvs[0], 0.0);
shadow += textureProjLodOffset(shadow_sampler, shadow_uvs[0], 0.0, ivec2(-1, -1));
shadow += textureProjLodOffset(shadow_sampler, shadow_uvs[0], 0.0, ivec2(-1,  1));
shadow += textureProjLodOffset(shadow_sampler, shadow_uvs[0], 0.0, ivec2( 1, -1));
shadow += textureProjLodOffset(shadow_sampler, shadow_uvs[0], 0.0, ivec2( 1,  1));
shadow *= 0.2;

shadow += dot(vec2(1.0), step(vec2(0.5), abs(shadow_uvs[0].xy - 0.5)));

shadow = clamp(shadow, 0.0, 1.0);
</source>
   <version>130</version>
  </shader_source_data>
  <shader_source_data>
   <parameters>
    <parameter>
     <common_parameter>shadow</common_parameter>
     <qualifier>out</qualifier>
    </parameter>
    <parameter>
     <sampler_parameter>shadow_sampler</sampler_parameter>
     <type>sampler2DShadow</type>
    </parameter>
    <parameter>
     <common_parameter>shadow_uvs</common_parameter>
     <qualifier>in</qualifier>
    </parameter>
   </parameters>
   <source>shadow = dot(vec2(1.0), step(vec2(0.5), abs(shadow_uvs[0].xy - 0.5)));
shadow += shadow2DProj(shadow_sampler, shadow_uvs[0]).r;
shadow = clamp(shadow, 0.0, 1.0);
</source>
   <version>120</version>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
