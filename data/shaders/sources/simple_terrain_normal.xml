<?xml version="1.0" encoding="utf8"?>
<shader_source>
 <name>simple-terrain</name>
 <type>world_normal_transformation</type>
 <shader_source_datas>
  <shader_source_data>
   <parameters>
    <parameter>
     <name>morph_normal</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>morph_position</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>position</name>
     <type>vec4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>terrain_texture_coodrinate</name>
     <type>vec2</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_normal</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_position</name>
     <type>vec3</type>
     <qualifier>out</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
    <parameter>
     <name>world_transformation</name>
     <type>mat2x4</type>
     <qualifier>in</qualifier>
     <size>one</size>
     <scale>1</scale>
    </parameter>
   </parameters>
   <source>vec2 fenc;
float f, g;

world_position = morph_position.xyz;
world_position.xy = world_position.xy * 2.0 - 1.0;
world_position = world_position * terrain_vector_scale + position.xyz;

fenc = morph_normal.xy * 3.968871595 - 1.984435798;
f = dot(fenc, fenc);
g = sqrt(1.0f - f / 4.0);
world_normal = vec3(fenc * g, 1.0 - f / 2.0);

world_position += 2.0 * cross(world_transformation[0].xyz, cross(world_transformation[0].xyz, world_position) + world_transformation[0].w * world_position);
world_position *= world_transformation[1].w;
world_position += world_transformation[1].xyz;
world_normal += 2.0 * cross(world_transformation[0].xyz, cross(world_transformation[0].xyz, world_normal) + world_transformation[0].w * world_normal);
terrain_texture_coodrinate = position.xy + world_transformation[1].xy;
</source>
   <version>120</version>
  </shader_source_data>
 </shader_source_datas>
</shader_source>
